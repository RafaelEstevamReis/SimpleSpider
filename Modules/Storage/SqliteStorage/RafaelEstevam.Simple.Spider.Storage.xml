<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RafaelEstevam.Simple.Spider.Storage</name>
    </assembly>
    <members>
        <member name="T:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database">
            <summary>
            Database access class
            </summary>
        </member>
        <member name="P:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.DatabaseFileName">
            <summary>
            Database file full path
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.#ctor(System.String)">
            <summary>
            Creates a new instance
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.CreateTables">
            <summary>
            Builds the table creation sequence, should be finished with Commit()
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.GetAllTables">
            <summary>
            Get a list of all tables
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.GetTableSchema(System.String)">
            <summary>
            Gets the schema for a table
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.ExecuteNonQuery(System.String,System.Object)">
            <summary>
            Executes a NonQUery command, this method locks the execution
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.ExecuteScalar``1(System.String,System.Object)">
            <summary>
            Executes a Scalar commands and return the value as T
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.ExecuteReader(System.String,System.Object)">
            <summary>
            Executes a query and returns as DataTable
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.ExecuteQuery``1(System.String,System.Object)">
            <summary>
            Executes a query and returns the value as a T collection
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.Get``1(System.String,System.Object)">
            <summary>
            Gets a single T with specified table KeyValue on KeyColumn
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.GetAll``1">
            <summary>
            Queries the database to all T rows in the table
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.Insert``1(``0)">
            <summary>
            Inserts a new T and return it's ID, this method locks the execution
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.Sqlite.Database.BulkInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Inserts many T items into the database and return their IDs, this method locks the execution
            </summary>
        </member>
        <member name="T:RafaelEstevam.Simple.Spider.Storage.ObjectReference">
            <summary>
            Intermediate class to storage item metadata
            </summary>
        </member>
        <member name="P:RafaelEstevam.Simple.Spider.Storage.ObjectReference.Uri">
            <summary>
            Crawl Uri 
            </summary>
        </member>
        <member name="P:RafaelEstevam.Simple.Spider.Storage.ObjectReference.CrawTime">
            <summary>
            Crawl timestamp
            </summary>
        </member>
        <member name="P:RafaelEstevam.Simple.Spider.Storage.ObjectReference.InsertedItem">
            <summary>
            ID on the Item table
            </summary>
        </member>
        <member name="T:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1">
            <summary>
            Store values in a Sqlite database
            </summary>
            <typeparam name="T">Type of data to be stored</typeparam>
        </member>
        <member name="P:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.DatabaseFilePath">
            <summary>
            Gets the database full path
            </summary>
        </member>
        <member name="P:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.TableNameOfT">
            <summary>
            Gets the name of the table used to store the items
            </summary>
        </member>
        <member name="F:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.TableNameOfMetadata">
            <summary>
             Gets the name of the table used to store item metadata as Url and Timestamp
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.#ctor">
            <summary>
            Create a new instance
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.Initialize(RafaelEstevam.Simple.Spider.Configuration)">
            <summary>
            Initialization method, will be called by the spider. Do not call it
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.LoadData">
            <summary>
            LoadData, in Sqlite data is aways avalailable
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.SaveData(System.Boolean)">
            <summary>
            Saves the data on Disk NOW
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.AddItem(RafaelEstevam.Simple.Spider.Link,System.Object)">
            <summary>
            Adds and item the the database
            </summary>
            <param name="link">Link containing data about where the item was found</param>
            <param name="item">Item to be saved</param>
            <returns>For this storage, aways true</returns>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.AddItem(RafaelEstevam.Simple.Spider.Link,`0)">
            <summary>
            Adds and item the the database
            </summary>
            <param name="link">Link containing data about where the item was found</param>
            <param name="item">Item to be saved</param>
            <returns>For this storage, aways true</returns>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.Count">
            <summary>
            Counts all records on the table, can be expensive on big tables
            </summary>
            <returns>How many records are on the table</returns>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.ReadAll">
            <summary>
            Returns all added items
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.ReadAllReferenced">
            <summary>
            Returns all added items with it's metadata
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.RetrieveAllItems">
            <summary>
            Retrieve all stored items
            </summary>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.GetItemsWith(System.String,System.Object)">
            <summary>
            Retrieve items where [Property] equals [Value]
            </summary>
            <param name="Property"></param>
            <param name="Value"></param>
            <returns>Stored items</returns>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.GetItemsCollectedBeween(System.DateTime,System.DateTime)">
            <summary>
            Retrieve items collected between [start] and [end]
            </summary>
            <returns>Stored items</returns>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.GetItemsCollectedAt(System.Uri)">
            <summary>
            Retrieve items collected at [collectedUri]
            </summary>
            <returns>Stored items</returns>
        </member>
        <member name="M:RafaelEstevam.Simple.Spider.Storage.SQLiteStorage`1.GetItemsWithUriContaining(System.String)">
            <summary>
            Retrieve items collected at a url that contains [uriContains]
            </summary>
            <param name="uriContains">Partial content of the Url</param>
            <returns>Stored items</returns>
        </member>
    </members>
</doc>
